{"ast":null,"code":"// api.js — fetch to /api will be proxied to Flask backend at localhost:5000\nconst API_BASE = \"/api\";\nasync function fetchJSON(path, opts = {}) {\n  const res = await fetch(API_BASE + path, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    ...opts\n  });\n  if (!res.ok) {\n    const txt = await res.text();\n    throw new Error(txt || res.statusText);\n  }\n  return res.json();\n}\nexport const productsAPI = {\n  list: () => fetchJSON(\"/products\"),\n  create: p => fetchJSON(\"/products\", {\n    method: \"POST\",\n    body: JSON.stringify(p)\n  }),\n  update: (id, p) => fetchJSON(`/products/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(p)\n  }),\n  delete: id => fetchJSON(`/products/${id}`, {\n    method: \"DELETE\"\n  })\n};\nexport const locationsAPI = {\n  list: () => fetchJSON(\"/locations\"),\n  create: l => fetchJSON(\"/locations\", {\n    method: \"POST\",\n    body: JSON.stringify(l)\n  }),\n  update: (id, l) => fetchJSON(`/locations/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(l)\n  }),\n  delete: id => fetchJSON(`/locations/${id}`, {\n    method: \"DELETE\"\n  })\n};\nexport const movementsAPI = {\n  list: () => fetchJSON(\"/movements\"),\n  create: m => fetchJSON(\"/movements\", {\n    method: \"POST\",\n    body: JSON.stringify(m)\n  }),\n  update: (id, m) => fetchJSON(`/movements/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(m)\n  }),\n  delete: id => fetchJSON(`/movements/${id}`, {\n    method: \"DELETE\"\n  })\n};\nexport const reportAPI = {\n  balance: () => fetchJSON(\"/report/balance\")\n};","map":{"version":3,"names":["API_BASE","fetchJSON","path","opts","res","fetch","headers","ok","txt","text","Error","statusText","json","productsAPI","list","create","p","method","body","JSON","stringify","update","id","delete","locationsAPI","l","movementsAPI","m","reportAPI","balance"],"sources":["C:/Users/91636/Downloads/projects_vs/flask_project/frontend/src/api.js"],"sourcesContent":["// api.js — fetch to /api will be proxied to Flask backend at localhost:5000\r\nconst API_BASE = \"/api\";\r\n\r\nasync function fetchJSON(path, opts = {}) {\r\n  const res = await fetch(API_BASE + path, {\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    ...opts\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const txt = await res.text();\r\n    throw new Error(txt || res.statusText);\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport const productsAPI = {\r\n  list: () => fetchJSON(\"/products\"),\r\n  create: (p) => fetchJSON(\"/products\", { method: \"POST\", body: JSON.stringify(p) }),\r\n  update: (id, p) => fetchJSON(`/products/${id}`, { method: \"PUT\", body: JSON.stringify(p) }),\r\n  delete: (id) => fetchJSON(`/products/${id}`, { method: \"DELETE\" })\r\n};\r\n\r\nexport const locationsAPI = {\r\n  list: () => fetchJSON(\"/locations\"),\r\n  create: (l) => fetchJSON(\"/locations\", { method: \"POST\", body: JSON.stringify(l) }),\r\n  update: (id, l) => fetchJSON(`/locations/${id}`, { method: \"PUT\", body: JSON.stringify(l) }),\r\n  delete: (id) => fetchJSON(`/locations/${id}`, { method: \"DELETE\" })\r\n};\r\n\r\nexport const movementsAPI = {\r\n  list: () => fetchJSON(\"/movements\"),\r\n  create: (m) => fetchJSON(\"/movements\", { method: \"POST\", body: JSON.stringify(m) }),\r\n  update: (id, m) => fetchJSON(`/movements/${id}`, { method: \"PUT\", body: JSON.stringify(m) }),\r\n  delete: (id) => fetchJSON(`/movements/${id}`, { method: \"DELETE\" })\r\n};\r\n\r\nexport const reportAPI = {\r\n  balance: () => fetchJSON(\"/report/balance\")\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,MAAM;AAEvB,eAAeC,SAASA,CAACC,IAAI,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACxC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACL,QAAQ,GAAGE,IAAI,EAAE;IACvCI,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/C,GAAGH;EACL,CAAC,CAAC;EAEF,IAAI,CAACC,GAAG,CAACG,EAAE,EAAE;IACX,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAC5B,MAAM,IAAIC,KAAK,CAACF,GAAG,IAAIJ,GAAG,CAACO,UAAU,CAAC;EACxC;EACA,OAAOP,GAAG,CAACQ,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,MAAMC,WAAW,GAAG;EACzBC,IAAI,EAAEA,CAAA,KAAMb,SAAS,CAAC,WAAW,CAAC;EAClCc,MAAM,EAAGC,CAAC,IAAKf,SAAS,CAAC,WAAW,EAAE;IAAEgB,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,CAAC;EAAE,CAAC,CAAC;EAClFK,MAAM,EAAEA,CAACC,EAAE,EAAEN,CAAC,KAAKf,SAAS,CAAC,aAAaqB,EAAE,EAAE,EAAE;IAAEL,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,CAAC;EAAE,CAAC,CAAC;EAC3FO,MAAM,EAAGD,EAAE,IAAKrB,SAAS,CAAC,aAAaqB,EAAE,EAAE,EAAE;IAAEL,MAAM,EAAE;EAAS,CAAC;AACnE,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG;EAC1BV,IAAI,EAAEA,CAAA,KAAMb,SAAS,CAAC,YAAY,CAAC;EACnCc,MAAM,EAAGU,CAAC,IAAKxB,SAAS,CAAC,YAAY,EAAE;IAAEgB,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,CAAC;EAAE,CAAC,CAAC;EACnFJ,MAAM,EAAEA,CAACC,EAAE,EAAEG,CAAC,KAAKxB,SAAS,CAAC,cAAcqB,EAAE,EAAE,EAAE;IAAEL,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,CAAC;EAAE,CAAC,CAAC;EAC5FF,MAAM,EAAGD,EAAE,IAAKrB,SAAS,CAAC,cAAcqB,EAAE,EAAE,EAAE;IAAEL,MAAM,EAAE;EAAS,CAAC;AACpE,CAAC;AAED,OAAO,MAAMS,YAAY,GAAG;EAC1BZ,IAAI,EAAEA,CAAA,KAAMb,SAAS,CAAC,YAAY,CAAC;EACnCc,MAAM,EAAGY,CAAC,IAAK1B,SAAS,CAAC,YAAY,EAAE;IAAEgB,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,CAAC;EAAE,CAAC,CAAC;EACnFN,MAAM,EAAEA,CAACC,EAAE,EAAEK,CAAC,KAAK1B,SAAS,CAAC,cAAcqB,EAAE,EAAE,EAAE;IAAEL,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,CAAC;EAAE,CAAC,CAAC;EAC5FJ,MAAM,EAAGD,EAAE,IAAKrB,SAAS,CAAC,cAAcqB,EAAE,EAAE,EAAE;IAAEL,MAAM,EAAE;EAAS,CAAC;AACpE,CAAC;AAED,OAAO,MAAMW,SAAS,GAAG;EACvBC,OAAO,EAAEA,CAAA,KAAM5B,SAAS,CAAC,iBAAiB;AAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}